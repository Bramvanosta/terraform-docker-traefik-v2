log:
    level: info

entryPoints:
    http:
      address: ":80"
      forwardedHeaders:
        trustedIPs:
            # Start Cloudflare IP Ranges
            - 173.245.48.0/20
            - 103.21.244.0/22
            - 103.22.200.0/22
            - 103.31.4.0/22
            - 141.101.64.0/18
            - 108.162.192.0/18
            - 190.93.240.0/20
            - 188.114.96.0/20
            - 197.234.240.0/22
            - 198.41.128.0/17
            - 162.158.0.0/15
            - 104.16.0.0/13
            - 104.24.0.0/14
            - 172.64.0.0/13
            - 131.0.72.0/22
            # End Cloudflare IP Ranges
    https:
      address: ":443"
      forwardedHeaders:
        trustedIPs:
            # Cloudflare IP Ranges
            - 173.245.48.0/20
            - 103.21.244.0/22
            - 103.22.200.0/22
            - 103.31.4.0/22
            - 141.101.64.0/18
            - 108.162.192.0/18
            - 190.93.240.0/20
            - 188.114.96.0/20
            - 197.234.240.0/22
            - 198.41.128.0/17
            - 162.158.0.0/15
            - 104.16.0.0/13
            - 104.24.0.0/14
            - 172.64.0.0/13
            - 131.0.72.0/22
            # End Cloudflare IP Ranges

# Docker Provider
providers:
    docker:
      endpoint: "unix:///var/run/docker.sock"
      network: "${traefik_network}"
      swarmMode: false
      exposedByDefault: false

# Enable dashboard
api:
    dashboard: true

# Let's Encrypt
certificatesResolvers:
    letsEncrypt:
        acme:
            email: "${acme_email}"
            caServer: ${le_production_url} # Use Let's Encrypt staging server when experimenting to avoid hitting Let's Encrypts rate limit
            storage: ${acme_storage_path}
            keyType: "${lets_encrypt_keytype}"
            httpChallenge:
                # used during the challenge
                entryPoint: http
    letsEncryptStaging:
        acme:
            email: "${acme_email}"
            caServer: ${le_staging_url}
            storage: ${acme_storage_path}
            keyType: "${lets_encrypt_keytype}"
            httpChallenge:
                # used during the challenge
                entryPoint: http
${cf_resolver}

accessLog: {}

metrics:
    prometheus:
        buckets:
        - 0.1
        - 0.3
        - 1.2
        - 5
        manualRouting: true